openapi: 3.0.4
info:
  title: Unofficial CSFloat.com API
  description: |-
    This is an unofficial attempt at documenting the CSFloat REST API (incomplete).

    [Official CSFloat Documentation](https://docs.csfloat.com/#introduction)
  license:
    name: MIT License
    url: https://choosealicense.com/licenses/mit/
  version: v0.1
servers:
  - url: https://csfloat.com/api/v1/me

security:
  - ApiKeyAuth: []

paths:
  /transactions:
    get:
      description: Returns a list of transactions made. Each page can contain at most 100 records
      parameters:
        - name: page
          in: query
          description: Page number to query
          schema:
            type: integer
            minimum: 0
        - name: limit
          in: query
          description: Number of items on the page
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: order
          in: query
          description: Order items by time created
          schema:
            type: string
            enum: [desc, asc]

      responses:
        "200":
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: transaction id
                    created_at:
                      type: string
                      description: time order was created at
                    user_id:
                      type: string
                      description: user's steam id
                    type:
                      type: string
                      description: type of transaction
                    details:
                      type: object
                      description: details of the transaction
                      properties:
                        contract_id:
                          type: string
                          description: id of the contract_id
                        trade_id:
                          type: string
                          description: id of the trade_id
                        type:
                          type: string
                          description: could only find examples where this was "buyer_ping"
                    balance_offset:
                      type: integer
                      description: balance change (usd)
                    pending_offset:
                      type: integer
                      description: any pending balance change, this is usually from sales (usd)
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Invalid API Key
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Invalid API key

  /trades:
    get:
      description: Returns a list of trades with buyer, seller, contract and item details. Each page can contain at most 100 records
      parameters:
        - name: page
          in: query
          description: Page number to query
          required: false
          schema:
            type: integer
            minimum: 0
            example: 0
        - name: limit
          in: query
          description: Number of items on each page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            example: 100
        - name: order
          in: query
          description: Order items by time created
          required: false
          schema:
            type: string
            enum: [desc, asc]

      responses:
        "200":
          description: Returns a list of trades with buyer, seller, contract, and item details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TradesResponse"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    TradesResponse:
      type: object
      properties:
        trades:
          type: array
          items:
            $ref: "#/components/schemas/Trade"
        count:
          type: integer
          example: 937

    Trade:
      type: object
      properties:
        id:
          type: string
          description: Trade id
          example: "888795826602772312"
        created_at:
          type: string
          format: date-time
          description: Datetime that the trade was sent
          example: "2025-09-18T14:37:18.090058Z"
        buyer_id:
          type: string
          description: buyer's steam64id
          example: "76561197963930667"
        buyer:
          $ref: "#/components/schemas/User"
        seller_id:
          type: string
          description: seller's steam64id
        seller:
          $ref: "#/components/schemas/User"
        contract_id:
          type: string
          description: trade's contract_id. Seems to match the one generated in /transactions
          example: "888436313764790436"
        accepted_at:
          type: string
          format: date-time
          description: Datetime that the trade was marked as accepted
          example: "2025-09-18T14:45:20.638317Z"
        state:
          type: string
          enum: [pending, verified, queued] # TODO: Check all values. Got the 'queued' when a trade was not yet sent (just purchased an item)
        verification_mode:
          type: string
          enum: [escrow, inventory] # TODO: Check all values. Got the 'inventory' when a trade was not yet sent (just purchased) 
        steam_offer:
          oneOf:
            - $ref: "#/components/schemas/SteamOfferFull"
            - $ref: "#/components/schemas/SteamOfferMinimal"
        verify_sale_at:
          type: string
          format: date-time
        inventory_check_status:
          type: integer
          enum: [1, 2]
          description: Unsure what this represents # TODO try to find differences when this is 1 vs 2
        trade_protection_ends_at:
          type: string
          format: date-time
          description: 7-ish days after the trade offer was accepted. Before this time the trade can be reversed on steam
        contract:
          $ref: "#/components/schemas/Contract"
        trade_url:
          type: string
          format: uri
          description: Buyer's trade offer link
        trade_token:
          type: string
          description: Buyer's trade offer token
        wait_for_cancel_ping:
          type: boolean
        is_settlement_period:
          type: boolean

    User:
      type: object
      properties:
        avatar:
          type: string
          format: uri
          description: uri link to steam avatar
        away:
          type: boolean
        flags:
          type: integer
        online:
          type: boolean
        stall_public:
          type: boolean
        statistics:
          $ref: "#/components/schemas/UserStatistics"
        steam_id:
          type: string
          description: steam64id
        username:
          type: string
          description: steam username at the time of the transaction

    UserStatistics:
      type: object
      properties:
        median_trade_time:
          type: integer
          example: 50
        total_avoided_trades:
          type: integer
          example: 0
        total_failed_trades:
          type: integer
          example: 1
        total_trades:
          type: integer
          example: 472
        total_verified_trades:
          type: integer
          example: 473

    SteamOfferMinimal:
      type: object
      required: [is_from_seller]
      description: Minimal response if steam offer is not sent
      properties:
        is_from_seller:
          type: boolean

    SteamOfferFull:
      type: object
      required: [id, state, is_from_seller, can_cancel_at, sent_at, deadline_at, updated_at]
      properties:
        id:
          type: string
          description: Steam trade offer id
        state:
          type: integer
          description: Not sure what this represents
          enum: [3] # TODO: Check all values, I can't find a trade thats not marked as 3
        is_from_seller:
          type: boolean
        can_cancel_at:
          type: string
          format: date-time
        sent_at:
          type: string
          format: date-time
        deadline_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Contract:
      type: object
      properties:
        id:
          type: string
          description: Contract id
          example: "888770737610031370"
        created_at:
          type: string
          format: date-time
          description: Datetime that the contract was created
        type:
          type: string
          enum: ["buy_now"] # TODO find other types, this might change if selling an item?
          description: the type of transaction
        price:
          type: number
          description: price, in usd cents
        state:
          type: string
          enum: [sold] # TODO find other types, this might change if selling an item?
          description: the state of the contract
        seller:
          $ref: "#/components/schemas/User"
        reference:
          $ref: "#/components/schemas/Reference"
        item:
          $ref: "#/components/schemas/Item"
        is_seller:
          type: boolean
          description: true if you are the seller
        is_watchlisted:
          type: boolean
          description: true if you added the item to your watchlist
        watchers:
          type: integer
          description: the number of people watching the item
        sold_at:
          type: string
          format: date-time

    Reference:
      type: object
      description: This might be CSFloat's price estimate
      properties:
        base_price:
          type: number
          description: In usd cents
        float_factor:
          type: number
        predicted_price:
          type: number
          description: seems to be derived from base_price * float_factor
        quantity:
          type: integer
        last_updated:
          type: string
          format: date-time

    Item:
      type: object
      properties:
        asset_id:
          type: string  
          description: Unique value tied to the skin
        def_index:
          type: integer
          description: unique numeric identifier for a specific weapon or item in the game, 7 = WEAPON_AK47
        paint_index:
          type: integer
          description: the paint index is similar to the def index, except it is a unique numeric identifier for each skin in the game
        paint_seed:
          type: integer
          description: 1-1000
        float_value:
          type: number
          format: float
          description: Skin's float value
        icon_url:
          type: string
        d_param:
          type: string
          description: part of the inspect_link
        is_stattrak:
          type: boolean
        is_souvenir:
          type: boolean
        rarity:
          type: integer
          enum: [1]
          #description: # TODO: find all the valid values, this likely means "consumer grade", etc
        quality:
          type: integer
          description: #what does this represent?
        market_hash_name:
          type: string
          description: Name of the skin
          example: MAG-7 | Navy Sheen (Factory New)
        tradable:
          type: integer
        inspect_link:
          type: string
          description: Inspect link for the item
        cs2_screenshot_id:
          type: string
          example: "7181723192810729264"
        cs2_screenshot_at:
          type: string
          format: date-time
          description: Datetime for when the screenshot was taken
        is_commodity:
          type: boolean
        type:
          type: string
          description: type of asset
          enum: [skin] # TODO: get all types
          example: "skin"
        rarity_name:
          type: string
          example: Consumer Grade
        type_name:
          type: string
          example: Skin
        item_name:
          type: string
          example: MAG-7 | Navy Sheen
        wear_name:
          type: string
          example: Factory New
        description:
          type: string
          description: An anodized navy blue VariCamo pattern has been applied.\\n\\n<i>Why so blue?</i>
        collection:
          type: string
          description: The collection that the skin belongs to
          example: The 2021 Mirage Collection
        serialized_inspect:
          type: string
        gs_sig:
          type: string
